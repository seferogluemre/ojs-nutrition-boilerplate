/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated/route'
import { Route as authRouteImport } from './routes/(auth)/route'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as authSignUpImport } from './routes/(auth)/sign-up'
import { Route as authSignInImport } from './routes/(auth)/sign-in'
import { Route as authOtpImport } from './routes/(auth)/otp'
import { Route as authForgotPasswordImport } from './routes/(auth)/forgot-password'
import { Route as AuthenticatedSssIndexImport } from './routes/_authenticated/sss/index'
import { Route as AuthenticatedLoginIndexImport } from './routes/_authenticated/login/index'
import { Route as AuthenticatedContactIndexImport } from './routes/_authenticated/contact/index'
import { Route as AuthenticatedAboutIndexImport } from './routes/_authenticated/about/index'

// Create Virtual Routes

const PaymentLazyImport = createFileRoute('/payment')()
const errors503LazyImport = createFileRoute('/(errors)/503')()
const errors500LazyImport = createFileRoute('/(errors)/500')()
const errors404LazyImport = createFileRoute('/(errors)/404')()
const errors403LazyImport = createFileRoute('/(errors)/403')()
const errors401LazyImport = createFileRoute('/(errors)/401')()
const AuthenticatedProductsIndexLazyImport = createFileRoute(
  '/_authenticated/products/',
)()
const AuthenticatedAccountIndexLazyImport = createFileRoute(
  '/_authenticated/account/',
)()
const AuthenticatedProductsProductIdLazyImport = createFileRoute(
  '/_authenticated/products/$productId',
)()

// Create/Update Routes

const PaymentLazyRoute = PaymentLazyImport.update({
  id: '/payment',
  path: '/payment',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/payment.lazy').then((d) => d.Route))

const AuthenticatedRouteRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const authRouteRoute = authRouteImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const errors503LazyRoute = errors503LazyImport
  .update({
    id: '/(errors)/503',
    path: '/503',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/503.lazy').then((d) => d.Route))

const errors500LazyRoute = errors500LazyImport
  .update({
    id: '/(errors)/500',
    path: '/500',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/500.lazy').then((d) => d.Route))

const errors404LazyRoute = errors404LazyImport
  .update({
    id: '/(errors)/404',
    path: '/404',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/404.lazy').then((d) => d.Route))

const errors403LazyRoute = errors403LazyImport
  .update({
    id: '/(errors)/403',
    path: '/403',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/403.lazy').then((d) => d.Route))

const errors401LazyRoute = errors401LazyImport
  .update({
    id: '/(errors)/401',
    path: '/401',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/401.lazy').then((d) => d.Route))

const authSignUpRoute = authSignUpImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => authRouteRoute,
} as any)

const authSignInRoute = authSignInImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => authRouteRoute,
} as any)

const authOtpRoute = authOtpImport.update({
  id: '/otp',
  path: '/otp',
  getParentRoute: () => authRouteRoute,
} as any)

const authForgotPasswordRoute = authForgotPasswordImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => authRouteRoute,
} as any)

const AuthenticatedProductsIndexLazyRoute =
  AuthenticatedProductsIndexLazyImport.update({
    id: '/products/',
    path: '/products/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/products/index.lazy').then((d) => d.Route),
  )

const AuthenticatedAccountIndexLazyRoute =
  AuthenticatedAccountIndexLazyImport.update({
    id: '/account/',
    path: '/account/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/account/index.lazy').then((d) => d.Route),
  )

const AuthenticatedSssIndexRoute = AuthenticatedSssIndexImport.update({
  id: '/sss/',
  path: '/sss/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedLoginIndexRoute = AuthenticatedLoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedContactIndexRoute = AuthenticatedContactIndexImport.update({
  id: '/contact/',
  path: '/contact/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedAboutIndexRoute = AuthenticatedAboutIndexImport.update({
  id: '/about/',
  path: '/about/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedProductsProductIdLazyRoute =
  AuthenticatedProductsProductIdLazyImport.update({
    id: '/products/$productId',
    path: '/products/$productId',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/products/$productId.lazy').then(
      (d) => d.Route,
    ),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(auth)': {
      id: '/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authRouteImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRoute
    }
    '/payment': {
      id: '/payment'
      path: '/payment'
      fullPath: '/payment'
      preLoaderRoute: typeof PaymentLazyImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordImport
      parentRoute: typeof authRouteImport
    }
    '/(auth)/otp': {
      id: '/(auth)/otp'
      path: '/otp'
      fullPath: '/otp'
      preLoaderRoute: typeof authOtpImport
      parentRoute: typeof authRouteImport
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInImport
      parentRoute: typeof authRouteImport
    }
    '/(auth)/sign-up': {
      id: '/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpImport
      parentRoute: typeof authRouteImport
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503LazyImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/products/$productId': {
      id: '/_authenticated/products/$productId'
      path: '/products/$productId'
      fullPath: '/products/$productId'
      preLoaderRoute: typeof AuthenticatedProductsProductIdLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/about/': {
      id: '/_authenticated/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AuthenticatedAboutIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/contact/': {
      id: '/_authenticated/contact/'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof AuthenticatedContactIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/login/': {
      id: '/_authenticated/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthenticatedLoginIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/sss/': {
      id: '/_authenticated/sss/'
      path: '/sss'
      fullPath: '/sss'
      preLoaderRoute: typeof AuthenticatedSssIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/account/': {
      id: '/_authenticated/account/'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AuthenticatedAccountIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/products/': {
      id: '/_authenticated/products/'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof AuthenticatedProductsIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
  }
}

// Create and export the route tree

interface authRouteRouteChildren {
  authForgotPasswordRoute: typeof authForgotPasswordRoute
  authOtpRoute: typeof authOtpRoute
  authSignInRoute: typeof authSignInRoute
  authSignUpRoute: typeof authSignUpRoute
}

const authRouteRouteChildren: authRouteRouteChildren = {
  authForgotPasswordRoute: authForgotPasswordRoute,
  authOtpRoute: authOtpRoute,
  authSignInRoute: authSignInRoute,
  authSignUpRoute: authSignUpRoute,
}

const authRouteRouteWithChildren = authRouteRoute._addFileChildren(
  authRouteRouteChildren,
)

interface AuthenticatedRouteRouteChildren {
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedProductsProductIdLazyRoute: typeof AuthenticatedProductsProductIdLazyRoute
  AuthenticatedAboutIndexRoute: typeof AuthenticatedAboutIndexRoute
  AuthenticatedContactIndexRoute: typeof AuthenticatedContactIndexRoute
  AuthenticatedLoginIndexRoute: typeof AuthenticatedLoginIndexRoute
  AuthenticatedSssIndexRoute: typeof AuthenticatedSssIndexRoute
  AuthenticatedAccountIndexLazyRoute: typeof AuthenticatedAccountIndexLazyRoute
  AuthenticatedProductsIndexLazyRoute: typeof AuthenticatedProductsIndexLazyRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedProductsProductIdLazyRoute:
    AuthenticatedProductsProductIdLazyRoute,
  AuthenticatedAboutIndexRoute: AuthenticatedAboutIndexRoute,
  AuthenticatedContactIndexRoute: AuthenticatedContactIndexRoute,
  AuthenticatedLoginIndexRoute: AuthenticatedLoginIndexRoute,
  AuthenticatedSssIndexRoute: AuthenticatedSssIndexRoute,
  AuthenticatedAccountIndexLazyRoute: AuthenticatedAccountIndexLazyRoute,
  AuthenticatedProductsIndexLazyRoute: AuthenticatedProductsIndexLazyRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof AuthenticatedIndexRoute
  '': typeof AuthenticatedRouteRouteWithChildren
  '/payment': typeof PaymentLazyRoute
  '/forgot-password': typeof authForgotPasswordRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/sign-up': typeof authSignUpRoute
  '/401': typeof errors401LazyRoute
  '/403': typeof errors403LazyRoute
  '/404': typeof errors404LazyRoute
  '/500': typeof errors500LazyRoute
  '/503': typeof errors503LazyRoute
  '/products/$productId': typeof AuthenticatedProductsProductIdLazyRoute
  '/about': typeof AuthenticatedAboutIndexRoute
  '/contact': typeof AuthenticatedContactIndexRoute
  '/login': typeof AuthenticatedLoginIndexRoute
  '/sss': typeof AuthenticatedSssIndexRoute
  '/account': typeof AuthenticatedAccountIndexLazyRoute
  '/products': typeof AuthenticatedProductsIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof AuthenticatedIndexRoute
  '/payment': typeof PaymentLazyRoute
  '/forgot-password': typeof authForgotPasswordRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/sign-up': typeof authSignUpRoute
  '/401': typeof errors401LazyRoute
  '/403': typeof errors403LazyRoute
  '/404': typeof errors404LazyRoute
  '/500': typeof errors500LazyRoute
  '/503': typeof errors503LazyRoute
  '/products/$productId': typeof AuthenticatedProductsProductIdLazyRoute
  '/about': typeof AuthenticatedAboutIndexRoute
  '/contact': typeof AuthenticatedContactIndexRoute
  '/login': typeof AuthenticatedLoginIndexRoute
  '/sss': typeof AuthenticatedSssIndexRoute
  '/account': typeof AuthenticatedAccountIndexLazyRoute
  '/products': typeof AuthenticatedProductsIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/(auth)': typeof authRouteRouteWithChildren
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/payment': typeof PaymentLazyRoute
  '/(auth)/forgot-password': typeof authForgotPasswordRoute
  '/(auth)/otp': typeof authOtpRoute
  '/(auth)/sign-in': typeof authSignInRoute
  '/(auth)/sign-up': typeof authSignUpRoute
  '/(errors)/401': typeof errors401LazyRoute
  '/(errors)/403': typeof errors403LazyRoute
  '/(errors)/404': typeof errors404LazyRoute
  '/(errors)/500': typeof errors500LazyRoute
  '/(errors)/503': typeof errors503LazyRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/products/$productId': typeof AuthenticatedProductsProductIdLazyRoute
  '/_authenticated/about/': typeof AuthenticatedAboutIndexRoute
  '/_authenticated/contact/': typeof AuthenticatedContactIndexRoute
  '/_authenticated/login/': typeof AuthenticatedLoginIndexRoute
  '/_authenticated/sss/': typeof AuthenticatedSssIndexRoute
  '/_authenticated/account/': typeof AuthenticatedAccountIndexLazyRoute
  '/_authenticated/products/': typeof AuthenticatedProductsIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/payment'
    | '/forgot-password'
    | '/otp'
    | '/sign-in'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/products/$productId'
    | '/about'
    | '/contact'
    | '/login'
    | '/sss'
    | '/account'
    | '/products'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/payment'
    | '/forgot-password'
    | '/otp'
    | '/sign-in'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/products/$productId'
    | '/about'
    | '/contact'
    | '/login'
    | '/sss'
    | '/account'
    | '/products'
  id:
    | '__root__'
    | '/(auth)'
    | '/_authenticated'
    | '/payment'
    | '/(auth)/forgot-password'
    | '/(auth)/otp'
    | '/(auth)/sign-in'
    | '/(auth)/sign-up'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/_authenticated/'
    | '/_authenticated/products/$productId'
    | '/_authenticated/about/'
    | '/_authenticated/contact/'
    | '/_authenticated/login/'
    | '/_authenticated/sss/'
    | '/_authenticated/account/'
    | '/_authenticated/products/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  authRouteRoute: typeof authRouteRouteWithChildren
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  PaymentLazyRoute: typeof PaymentLazyRoute
  errors401LazyRoute: typeof errors401LazyRoute
  errors403LazyRoute: typeof errors403LazyRoute
  errors404LazyRoute: typeof errors404LazyRoute
  errors500LazyRoute: typeof errors500LazyRoute
  errors503LazyRoute: typeof errors503LazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  authRouteRoute: authRouteRouteWithChildren,
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  PaymentLazyRoute: PaymentLazyRoute,
  errors401LazyRoute: errors401LazyRoute,
  errors403LazyRoute: errors403LazyRoute,
  errors404LazyRoute: errors404LazyRoute,
  errors500LazyRoute: errors500LazyRoute,
  errors503LazyRoute: errors503LazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/(auth)",
        "/_authenticated",
        "/payment",
        "/(errors)/401",
        "/(errors)/403",
        "/(errors)/404",
        "/(errors)/500",
        "/(errors)/503"
      ]
    },
    "/(auth)": {
      "filePath": "(auth)/route.tsx",
      "children": [
        "/(auth)/forgot-password",
        "/(auth)/otp",
        "/(auth)/sign-in",
        "/(auth)/sign-up"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated/route.tsx",
      "children": [
        "/_authenticated/",
        "/_authenticated/products/$productId",
        "/_authenticated/about/",
        "/_authenticated/contact/",
        "/_authenticated/login/",
        "/_authenticated/sss/",
        "/_authenticated/account/",
        "/_authenticated/products/"
      ]
    },
    "/payment": {
      "filePath": "payment.lazy.tsx"
    },
    "/(auth)/forgot-password": {
      "filePath": "(auth)/forgot-password.tsx",
      "parent": "/(auth)"
    },
    "/(auth)/otp": {
      "filePath": "(auth)/otp.tsx",
      "parent": "/(auth)"
    },
    "/(auth)/sign-in": {
      "filePath": "(auth)/sign-in.tsx",
      "parent": "/(auth)"
    },
    "/(auth)/sign-up": {
      "filePath": "(auth)/sign-up.tsx",
      "parent": "/(auth)"
    },
    "/(errors)/401": {
      "filePath": "(errors)/401.lazy.tsx"
    },
    "/(errors)/403": {
      "filePath": "(errors)/403.lazy.tsx"
    },
    "/(errors)/404": {
      "filePath": "(errors)/404.lazy.tsx"
    },
    "/(errors)/500": {
      "filePath": "(errors)/500.lazy.tsx"
    },
    "/(errors)/503": {
      "filePath": "(errors)/503.lazy.tsx"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/products/$productId": {
      "filePath": "_authenticated/products/$productId.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/about/": {
      "filePath": "_authenticated/about/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/contact/": {
      "filePath": "_authenticated/contact/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/login/": {
      "filePath": "_authenticated/login/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/sss/": {
      "filePath": "_authenticated/sss/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/account/": {
      "filePath": "_authenticated/account/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/products/": {
      "filePath": "_authenticated/products/index.lazy.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
